#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Элементы.РедактироватьФормы.Пометка = Ложь;	
	
	Для Каждого Сотрудник Из Параметры.Сотрудники Цикл		
		Строка = ТаблицаСостояние.Добавить();
		Строка.Организация = Сотрудник.ГоловнаяОрганизация;
		Строка.ФизЛицо = Сотрудник.ФизическоеЛицо;
		Строка.Сотрудник = Сотрудник;		
	КонецЦикла;	

	Для Каждого Строка Из ТаблицаСостояние Цикл				
		Данные = _ДанныеСостояние(Строка.Сотрудник, Строка.ФизЛицо, Строка.Организация);		
		ЗаполнитьЗначенияСвойств(Строка, Данные);				
	КонецЦикла;	
	
	_ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПодключитьОбработчикОжидания("_ПроверитьОбнолвениеНаКлиенте", 5, Истина);

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФормы(Команда)

	Элементы.РедактироватьФормы.Пометка = НЕ Элементы.РедактироватьФормы.Пометка;

	_ОбновитьФормуНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФормы(Команда)

	_ЗаполнитьФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФормы(Команда)

	ТекстСостояния = "Формируем документы";
	
	Сч = 0;
	Всего = ТаблицаСостояние.Количество();
	Для Каждого Строка Из ТаблицаСостояние Цикл		

		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);
				
		ОписаниеПодтверждения = МИтКС.ОписаниеПодтверждения();		
		ЗаполнитьЗначенияСвойств(ОписаниеПодтверждения, Строка); 
		
		Попытка	
			Данные = _СформироватьФормы(Строка.Сотрудник, МИтКС.ФиксированныеДанные(ОписаниеПодтверждения));		
			ЗаполнитьЗначенияСвойств(Строка, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			Строка.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		КонецПопытки;
				
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьФормы(Команда)

	ТекстСостояния = "Подготавливаем файлы";
	ПараметрыCMS = ЭлектроннаяПодписьКлиент.ПараметрыCMS();	
	
	Сч = 0;
	Всего = ТаблицаСостояние.Количество();
	ФайлыОрганизаций = Новый Соответствие;
	ФайлыСотрудников = Новый Соответствие;
	Для Каждого Строка Из ТаблицаСостояние Цикл		

		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);		
		
		Сертификат = МИтВсПовтИсп.СертификатПодписания(Строка.Организация);	
		Если НЕ ЗначениеЗаполнено(Сертификат) Тогда
			Продолжить;	
		КонецЕсли;
			
		Если ФайлыОрганизаций.Получить(Сертификат) = Неопределено Тогда
			Файлы = Новый Массив;	
			ФайлыОрганизаций.Вставить(Сертификат, Файлы);
		Иначе
			Файлы = ФайлыОрганизаций.Получить(Сертификат);	
		КонецЕсли;
		
		Попытка	
			Данные = _ПодготовитьФормыПодтверждениеПоСотруднику(Строка.Сотрудник, УникальныйИдентификатор);		
			ЗаполнитьЗначенияСвойств(Строка, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			Строка.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			Продолжить;
		КонецПопытки;
		
		Для Каждого Элемент Из Данные.Файлы Цикл
			Если Прав(Элемент.Имя, 3) = "csv" Тогда
				ОписаниеДанных = Новый Структура;
				ОписаниеДанных.Вставить("Данные", Элемент.Хранение);
				ОписаниеДанных.Вставить("ПараметрыCMS", ПараметрыCMS);
				Файлы.Добавить(ОписаниеДанных);		
				ФайлыСотрудников.Вставить(Элемент.Хранение, Строка);
			КонецЕсли;	
		КонецЦикла;
				
	КонецЦикла;		
	
	Оповещение = Новый ОписаниеОповещения("_СохранитьПодписи", ЭтаФорма, ФайлыСотрудников);
	Для Каждого Элемент Из ФайлыОрганизаций Цикл	
		МИтКлиент.МИтПодписатьДвоичныеДанные(Элемент.Значение, Элемент.Ключ, Оповещение);		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФормы(Команда)
	
	ТекстСостояния = "Подготавливаем файлы";
	
	Сч = 0;
	Всего = ТаблицаСостояние.Количество();
	Файлы = Новый Массив;
	Для Каждого Строка Из ТаблицаСостояние Цикл		

		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);		
		
		Попытка	
			Данные = _ПодготовитьФормыПодтверждениеПоСотруднику(Строка.Сотрудник, УникальныйИдентификатор);		
			ЗаполнитьЗначенияСвойств(Строка, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			Строка.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			Продолжить;
		КонецПопытки;
		
		Для Каждого Элемент Из Данные.Файлы Цикл
			Файлы.Добавить(Элемент);	
		КонецЦикла;
			
	КонецЦикла;	
	
	ФайловаяСистемаКлиент.СохранитьФайлы(Неопределено, Файлы); 
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФорму(Команда)

	ТекущиеДанные = Элементы.ТаблицаСостояние.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Файлы = Новый Массив;
	Попытка	
		Данные = _ПодготовитьФормыПодтверждениеПоСотруднику(ТекущиеДанные.Сотрудник, УникальныйИдентификатор);		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Данные);			
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();	
		ТекущиеДанные.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		Возврат;
	КонецПопытки;	

	Для Каждого Элемент Из Данные.Файлы Цикл
		Файлы.Добавить(Элемент);	
	КонецЦикла;	

	ФайловаяСистемаКлиент.СохранитьФайлы(Неопределено, Файлы);
	
КонецПроцедуры

&НаКлиенте
Процедура РазослатьФормы(Команда)

	ТекстСостояния = "Отправляем файлы";
	
	Сч = 0;
	Всего = ТаблицаСостояние.Количество();
	Для Каждого Строка Из ТаблицаСостояние Цикл		

		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);
			
		Попытка	
			Данные = _ОтправитьФайлыСотруднику(Строка.Сотрудник, УникальныйИдентификатор);		
			ЗаполнитьЗначенияСвойств(Строка, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			Строка.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		КонецПопытки;		
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОбновление(Команда)
	
	ОткрытьФорму(
		"Обработка.МИтОбслуживание.Форма.Обновление", 
		Новый Структура("ПоследняяВерсия", Новый Структура(ПоследняяВерсия)));	
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура _СохранитьПодписи(Результат, ДопПараметры = Неопределено) Экспорт
	
	Если Результат.Успех <> Истина Тогда
		Возврат;	
	КонецЕсли;

	// TODO хз как выглядит частичный успех подписания
	
	ТекстСостояния = "Сохраняем подписи";
	
	Сч = 0;
	Всего = Результат.НаборДанных.Количество();
	Для Каждого Строка Из Результат.НаборДанных Цикл			
		
		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);		
		
		Попытка
			СтрокаСотрудника = ДопПараметры.Получить(Строка.Данные);
			Если СтрокаСотрудника = Неопределено Тогда
				ВызватьИсключение "Строка сотрудника не найдена";	
			КонецЕсли;		
			Данные = _СохранитьПодписьНаСервере(СтрокаСотрудника.Сотрудник, Строка.СвойстваПодписи.Подпись, Неопределено);		
			ЗаполнитьЗначенияСвойств(СтрокаСотрудника, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			СтрокаСотрудника.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		КонецПопытки;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция _СохранитьПодписьНаСервере(Сотрудник, Данные, ДопПараметры) Экспорт
	
	Возврат МИт.ПодписатьФорму(Сотрудник, Данные, ДопПараметры);  
	
КонецФункции

&НаСервере
Процедура _ОбновитьФормуНаСервере()

	СостояниеФормы = _СостояниеФормы();
    СостояниеФормы.РедактироватьФормы = Элементы.РедактироватьФормы.Пометка;
	СостояниеФормы.ЕстьОбновление = ПоследняяВерсия <> Неопределено;
	
	_ОбновитьФорму(ЭтаФорма, СостояниеФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура _ОбновитьФормуНаКлиенте()
	
	СостояниеФормы = _СостояниеФормы();
    СостояниеФормы.РедактироватьФормы = Элементы.РедактироватьФормы.Пометка;
	СостояниеФормы.ЕстьОбновление = ПоследняяВерсия <> Неопределено;
	
	_ОбновитьФорму(ЭтаФорма, СостояниеФормы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура _ОбновитьФорму(Форма, СостояниеФормы)
	
	Если СостояниеФормы.ЕстьОбновление = Истина Тогда
		Форма.Элементы.ПанелиКнопок.ТекущаяСтраница = Форма.Элементы.ГруппаЕстьОбновление;	
	Иначе
		Форма.Элементы.ПанелиКнопок.ТекущаяСтраница = Форма.Элементы.ГруппаНет;	
	КонецЕсли;
	
	Форма.Элементы.ТаблицаСостояниеФорма.Видимость = СостояниеФормы.РедактироватьФормы;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция _ДанныеСостояние(Сотрудник, ФизЛицо, Организация)

	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Результат = МИт.ОписаниеПодтвержденияПоСотруднику(Сотрудник);	
	ИначеЕсли ЗначениеЗаполнено(ФизЛицо) Тогда
		Результат = МИт.ОписаниеПодтвержденияПоФизЛицу(ФизЛицо, Организация);	
	Иначе
		ВызватьИсключение "Ошибка";	
	КонецЕсли;
		
	Состояние = _СостояниеФормыПодтверждениеПоСотруднику(Сотрудник);
	Результат = МИтКС.Объединить(Результат, Состояние);
		
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция _СформироватьФормы(Сотрудник, ОписаниеПодтверждения) Экспорт
	
	МИт.ПодготовитьФорму(Сотрудник, ОписаниеПодтверждения, Неопределено);

	Возврат _СостояниеФормыПодтверждениеПоСотруднику(Сотрудник);	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция _СостояниеФормы() Экспорт

	Модель = Новый Структура;
	Модель.Вставить("РедактироватьФормы", Ложь);	
    Модель.Вставить("ЕстьОбновление", Ложь);
	
	Возврат Модель;
	
КонецФункции

&НаСервереБезКонтекста
Функция _СостояниеФормыПодтверждениеПоСотруднику(Сотрудник) Экспорт

	Результат = Новый Структура;
	Результат.Вставить("Состояние", МИт.ЗначениеСвойства(Сотрудник, МИтКС.СвойствоСостояниеПодтверждения()));	
 	Результат.Вставить("Статус", МИт.ЗначениеСвойства(Сотрудник, МИтКС.СвойствоСтатусПодтверждения()));
	
	Возврат Результат;	
	
КонецФункции

&НаСервереБезКонтекста
Функция _ПодготовитьФормыПодтверждениеПоСотруднику(Сотрудник, УникальныйИдентификатор) Экспорт 
	
	Результат = _СостояниеФормыПодтверждениеПоСотруднику(Сотрудник); 
	Результат.Вставить("Файлы", Новый Массив);
		
    Хранилище = Обработки.МИтХранилище.Создать();
	
	ИмяФайла = СтрШаблон("%1 %2", Сотрудник.Код, Сотрудник.Наименование);	
	Документ = Хранилище.ФормаCsvПоСотруднику(Сотрудник);		
    Если Хранилище.КонтейнерЗаполнен(Документ) Тогда 
		Данные = Хранилище.ПолучитьЗначение(Документ);
		Адрес = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
		Файл = Новый ОписаниеПередаваемогоФайла(ИмяФайла + ".csv", Адрес);
		Результат.Файлы.Добавить(Файл);
	Иначе
		Возврат Результат; 
	КонецЕсли;

  	Подпись = Хранилище.ПодписьCsvПоСотруднику(Сотрудник);
	Если Хранилище.КонтейнерЗаполнен(Подпись) Тогда 
		Данные = Хранилище.ПолучитьЗначение(Подпись);
		Адрес = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
		Файл = Новый ОписаниеПередаваемогоФайла(ИмяФайла + ".csv.sig", Адрес);
		Результат.Файлы.Добавить(Файл)
	КонецЕсли;	

	Возврат Результат; 
	
КонецФункции

&НаСервереБезКонтекста
Функция _ОтправитьФайлыСотруднику(Сотрудник, УникальныйИдентификатор) Экспорт

	Результат = _ПодготовитьФормыПодтверждениеПоСотруднику(Сотрудник, УникальныйИдентификатор);	
	Если НЕ Результат.Файлы.Количество() = 2 Тогда
		Возврат Результат;	
	КонецЕсли;
	
	Попытка
		
		НачатьТранзакцию();	
		
		ОтборКИ = УправлениеКонтактнойИнформацией.ОтборКонтактнойИнформации();
		ОтборКИ.ТипыКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		
		КИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформация(Сотрудник.ФизическоеЛицо, ОтборКИ); 
		Если НЕ КИ.Количество() Тогда
			Возврат Результат;	
		КонецЕсли;
		
		Ящик = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
		
		Письмо = Новый ИнтернетПочтовоеСообщение;	
		Для Каждого Элемент Из КИ Цикл
			Письмо.Получатели.Добавить(УправлениеКонтактнойИнформацией.АдресЭлектроннойПочты(КИ[0].Значение));	
		КонецЦикла;	
		Письмо.Отправитель = Ящик.АдресЭлектроннойПочты; 
		Письмо.Тема = "Подтверждение заявления на предоставление отсрочки от мобилизации";
		Письмо.Тексты.Добавить("см. вложения", ТипТекстаПочтовогоСообщения.ПростойТекст);	
		Для Каждого Элемент Из Результат.Файлы Цикл
			Письмо.Вложения.Добавить(ПолучитьИзВременногоХранилища(Элемент.Хранение), Элемент.Имя);	
		КонецЦикла;		
		
		РаботаСПочтовымиСообщениями.ОтправитьПисьмо(Ящик, Письмо);
		
		Результат = МИт.УстановитьСтатусОтправлен(Сотрудник);
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;	
	КонецПопытки;
		
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура _ПроверитьОбнолвениеНаКлиенте() Экспорт

	Попытка
		ПоследняяВерсия = Новый ФиксированнаяСтруктура(_ПроверитьОбнолвениеНаСервере());	
	Исключение
		ПоследняяВерсия = Неопределено;
		Возврат;	
	КонецПопытки;

	_ОбновитьФормуНаКлиенте();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция _ПроверитьОбнолвениеНаСервере() Экспорт

	Возврат Обработки.МИтОбслуживание.Создать().Обновление();	
	
КонецФункции

&НаКлиенте
Процедура _ЗаполнитьФормы() Экспорт

	ТекстСостояния = "Обновляем данные";
	
	Сч = 0;
	Всего = ТаблицаСостояние.Количество();
	Для Каждого Строка Из ТаблицаСостояние Цикл		
		
		Попытка	
			Данные = _ДанныеСостояние(Строка.Сотрудник, Строка.ФизЛицо, Строка.Организация);		
			ЗаполнитьЗначенияСвойств(Строка, Данные);			
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();	
			Строка.Состояние = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		КонецПопытки;
		
		Сч = Сч + 1;
		Прогресс = Окр((Сч / Всего) * 100);
		Состояние(ТекстСостояния, Прогресс);
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
